// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230704205437_virtualProperty")]
    partial class virtualProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("Core.Entities.CompanyOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EinNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CompanyOwners");
                });

            modelBuilder.Entity("Core.Entities.CompanyOwnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyOwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PercentOwnership")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyOwnershipStructureId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyOwnerId");

                    b.HasIndex("PropertyOwnershipStructureId");

                    b.ToTable("CompanyOwnerships");
                });

            modelBuilder.Entity("Core.Entities.ManagementCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EinNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ManagementCompanies");
                });

            modelBuilder.Entity("Core.Entities.PrivateOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PrivateOwners");
                });

            modelBuilder.Entity("Core.Entities.PrivateOwnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PercentOwnership")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrivateOwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyOwnershipStructureId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PrivateOwnerId");

                    b.HasIndex("PropertyOwnershipStructureId");

                    b.ToTable("PrivateOwnerships");
                });

            modelBuilder.Entity("Core.Entities.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ManagementCompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ManagementCompanyId");

                    b.HasIndex("PropertyTypeId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Core.Entities.PropertyFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyFiles");
                });

            modelBuilder.Entity("Core.Entities.PropertyOwnershipStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId")
                        .IsUnique();

                    b.ToTable("PropertyOwnershipStructures");
                });

            modelBuilder.Entity("Core.Entities.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PropertyTypes");
                });

            modelBuilder.Entity("Core.Entities.CompanyOwnership", b =>
                {
                    b.HasOne("Core.Entities.CompanyOwner", "CompanyOwner")
                        .WithMany("CompanyOwnerships")
                        .HasForeignKey("CompanyOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.PropertyOwnershipStructure", "PropertyOwnershipStructure")
                        .WithMany("CompanyOwnerships")
                        .HasForeignKey("PropertyOwnershipStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyOwner");

                    b.Navigation("PropertyOwnershipStructure");
                });

            modelBuilder.Entity("Core.Entities.PrivateOwnership", b =>
                {
                    b.HasOne("Core.Entities.PrivateOwner", "PrivateOwner")
                        .WithMany("PrivateOwnerships")
                        .HasForeignKey("PrivateOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.PropertyOwnershipStructure", "PropertyOwnershipStructure")
                        .WithMany("PrivateOwnerships")
                        .HasForeignKey("PropertyOwnershipStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrivateOwner");

                    b.Navigation("PropertyOwnershipStructure");
                });

            modelBuilder.Entity("Core.Entities.Property", b =>
                {
                    b.HasOne("Core.Entities.ManagementCompany", "ManagementCompany")
                        .WithMany("ManagedProperties")
                        .HasForeignKey("ManagementCompanyId");

                    b.HasOne("Core.Entities.PropertyType", "PropertyType")
                        .WithMany()
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementCompany");

                    b.Navigation("PropertyType");
                });

            modelBuilder.Entity("Core.Entities.PropertyFile", b =>
                {
                    b.HasOne("Core.Entities.Property", "Property")
                        .WithMany("PropertyImages")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Core.Entities.PropertyOwnershipStructure", b =>
                {
                    b.HasOne("Core.Entities.Property", "Property")
                        .WithOne("PropertyOwnershipStructure")
                        .HasForeignKey("Core.Entities.PropertyOwnershipStructure", "PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Core.Entities.CompanyOwner", b =>
                {
                    b.Navigation("CompanyOwnerships");
                });

            modelBuilder.Entity("Core.Entities.ManagementCompany", b =>
                {
                    b.Navigation("ManagedProperties");
                });

            modelBuilder.Entity("Core.Entities.PrivateOwner", b =>
                {
                    b.Navigation("PrivateOwnerships");
                });

            modelBuilder.Entity("Core.Entities.Property", b =>
                {
                    b.Navigation("PropertyImages");

                    b.Navigation("PropertyOwnershipStructure")
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.PropertyOwnershipStructure", b =>
                {
                    b.Navigation("CompanyOwnerships");

                    b.Navigation("PrivateOwnerships");
                });
#pragma warning restore 612, 618
        }
    }
}
